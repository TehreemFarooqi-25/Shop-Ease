version: '3.8'
services:
  # User Service with Flask and PostgreSQL
  user_service:
    build: ./services/user_service
    environment:
      DATABASE_URL: postgresql://shopEaseUser:shopEasePass@user_db:5432/shopEaseUserDB
      FLASK_ENV: development
    depends_on:
      user_db:
        condition: service_healthy
    ports:
      - "5000:5000"

  user_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: shopEaseUser
      POSTGRES_PASSWORD: shopEasePass
      POSTGRES_DB: shopEaseUserDB
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shopEaseUser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Product Service with Node.js and MongoDB
  product_service:
    build: ./services/product_service
    environment:
      MONGO_URL: mongodb://product_db:27017/shopEaseProductDB
    depends_on:
      product_db:
        condition: service_started
    ports:
      - "3000:3000"
  
  product_db:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: shopEaseProductDB
    ports:
      - "27017:27017"
  
  # Order Service with Spring Boot and MySQL
  order_service:
    build: ./services/order_service
    environment:
      MYSQL_DATABASE: shopEaseOrderDB
      MYSQL_ROOT_PASSWORD: shopEaseRoot
    depends_on:
      order_db:
        condition: service_healthy
    ports:
      - "8080:8080"

  order_db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: shopEaseRoot
      MYSQL_DATABASE: shopEaseOrderDB
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Reverse Proxy with Nginx
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "81:80"
    depends_on:
      - user_service
      - product_service
      - order_service
    restart: always
